package main

import "fmt"

// Константы можно объявлять с помощью const
// Константы могут быть строками, числами, логическими значениями и рунами
// Константы могут быть объявлены в любом месте кода, но обычно они объявляются в начале файла

const BINARY_REPRESENTATION = 0xFFFFFFFF
const x int64 = 10
const z = 20 * 2 // Константы могут быть вычислены во время компиляции программы

// Константы могут быть объявлены в блоке, как и переменные
const (
	idKey   = "id"
	nameKey = "name"
)

func Mmain() {
	var b = BINARY_REPRESENTATION << 1 // Сдвиг влево на 1 бит
	//То же самое что и b = 0xFFFFFFFF * 2
	var g = BINARY_REPRESENTATION >> 1 // Сдвиг вправо на 1 бит
	//То же самое что и g = 0xFFFFFFFF / 2
	const y = "hello"
	fmt.Println(x)
	fmt.Println(y)

	// Выдаст ошибку компиляции, поскольку константы нельзя изменять
	// x = x + 1
	// y = "bye"
	// idKey = "id2"
	// nameKey = "name2"

	fmt.Println(z)
	fmt.Println(idKey, nameKey, b, g)
}

// В Go нельзя сделать неизменяые значения на этапе выполнения программы
// То есть нельзя сделать так, чтобы константа была изменяемой в зависимости от условий программы
// Или же нельзя создать константу, которая зафиксируется во время выполнения программы
// Константы вычисляются ТОЛЬКО во время компиляции программы

// Не существует констант для указателей, массивов, срезов, мапов, структур (и полей),
// функций и интерфейсов
